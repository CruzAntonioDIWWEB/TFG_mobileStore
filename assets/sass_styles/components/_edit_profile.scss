@use '../global/variables' as v;
@use '../global/mixins' as *;
@use '../global/buttons' as btn;

/* =================================== */
/* Edit Profile Form Styles            */
/* =================================== */

/* Edit Profile Section - inherits from settings-section but with custom spacing */
.edit-profile-section {
    background-color: map-get(v.$colors, bg-light-gray);
    min-height: calc(100vh - map-get(v.$layout, header-height));
    padding: map-get(v.$spacing, md) 0; // Custom reduced padding
    
    .settings-container {
        @include container;
        max-width: 1000px;
    }
}

.edit-profile-card {
    background-color: map-get(v.$colors, white);
    border-radius: map-get(v.$layout, border-radius-lg);
    box-shadow: map-get(v.$shadows, small);
    overflow: hidden;
    margin-top: 0;

    .card-header {
        background: linear-gradient(135deg, map-get(v.$colors, primary-red), darken(map-get(v.$colors, primary-red), 10%));
        color: map-get(v.$colors, white);
        padding: map-get(v.$spacing, xl);
        display: flex;
        align-items: center;
        gap: map-get(v.$spacing, md);

        .card-icon {
            i {
                font-size: 2rem;
                opacity: 0.9;

                @include breakpoint(mobile) {
                    font-size: 1.5rem;
                }
            }
        }

        .card-title {
            h2 {
                @include heading-style('h2');
                color: map-get(v.$colors, white);
                margin: 0 0 map-get(v.$spacing, xs) 0;
                font-weight: map-get(v.$font-weights, bold);

                @include breakpoint(mobile) {
                    font-size: map-get(v.$font-sizes, h3);
                }
            }

            .card-subtitle {
                margin: 0 !important;
                color: map-get(v.$colors, white) !important;
                opacity: 0.9;
                @include body-text('small');

                @include breakpoint(mobile) {
                    font-size: map-get(v.$font-sizes, xs);
                }
            }
        }

        @include breakpoint(mobile) {
            padding: map-get(v.$spacing, lg);
            flex-direction: column;
            text-align: center;
            gap: map-get(v.$spacing, sm);
        }
    }

    .card-content {
        padding: map-get(v.$spacing, xxl);

        @include breakpoint(mobile) {
            padding: map-get(v.$spacing, lg);
        }
    }
}

/* Edit Profile Form */
.edit-profile-form {
    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: map-get(v.$spacing, lg);
        margin-bottom: map-get(v.$spacing, lg);

        @include breakpoint(tablet) {
            grid-template-columns: 1fr;
            gap: map-get(v.$spacing, md);
        }

        @include breakpoint(mobile) {
            gap: map-get(v.$spacing, sm);
        }
    }

    .form-group {
        margin-bottom: map-get(v.$spacing, lg);

        .form-label {
            display: flex;
            align-items: center;
            gap: map-get(v.$spacing, xs);
            margin-bottom: map-get(v.$spacing, sm);
            @include body-text('small');
            color: map-get(v.$colors, dark-gray);
            font-weight: map-get(v.$font-weights, semibold);
            font-size: map-get(v.$font-sizes, small);

            i {
                color: map-get(v.$colors, primary-red);
                font-size: 0.9rem;
                width: 16px;
                text-align: center;

                &.fa-envelope {
                    color: #007bff;
                }

                &.fa-lock {
                    color: #ffc107;
                }
            }
        }

        .form-input {
            width: 100%;
            padding: map-get(v.$spacing, md) map-get(v.$spacing, lg);
            border: 2px solid map-get(v.$colors, light-gray);
            border-radius: map-get(v.$layout, border-radius);
            font-family: map-get(v.$fonts, secondary);
            font-size: map-get(v.$font-sizes, base);
            transition: all map-get(v.$transitions, normal);
            box-sizing: border-box;
            background-color: map-get(v.$colors, white);

            &:focus {
                outline: none;
                border-color: map-get(v.$colors, primary-red);
                box-shadow: 0 0 0 3px rgba(map-get(v.$colors, primary-red), 0.1);
                background-color: rgba(map-get(v.$colors, primary-red), 0.02);
            }

            &:hover:not(:focus) {
                border-color: rgba(map-get(v.$colors, primary-red), 0.5);
            }

            &::placeholder {
                color: map-get(v.$colors, text-secondary);
                font-style: italic;
            }

            @include breakpoint(mobile) {
                padding: map-get(v.$spacing, sm) map-get(v.$spacing, md);
                font-size: map-get(v.$font-sizes, small);
            }
        }

        .form-hint {
            display: block;
            margin-top: map-get(v.$spacing, xs);
            @include body-text('small');
            color: map-get(v.$colors, text-secondary);
            font-size: map-get(v.$font-sizes, xs);
            font-style: italic;
        }
    }

    .form-buttons {
        display: flex;
        gap: map-get(v.$spacing, md);
        justify-content: center;
        margin-top: map-get(v.$spacing, xxl);
        padding-top: map-get(v.$spacing, lg);
        border-top: 1px solid map-get(v.$colors, light-gray);

        @include breakpoint(mobile) {
            flex-direction: column;
            gap: map-get(v.$spacing, sm);
        }

        .btn {
            @include btn.button-style;
            @include flex-center;
            gap: map-get(v.$spacing, xs);
            padding: map-get(v.$spacing, md) map-get(v.$spacing, xl);
            border-radius: map-get(v.$layout, border-radius);
            font-weight: map-get(v.$font-weights, semibold);
            transition: all map-get(v.$transitions, normal);
            text-decoration: none;
            border: none;
            cursor: pointer;
            font-size: map-get(v.$font-sizes, small);
            min-width: 140px;

            &.btn-primary {
                background-color: map-get(v.$colors, primary-red);
                color: map-get(v.$colors, white);

                &:hover {
                    background-color: darken(map-get(v.$colors, primary-red), 10%);
                    transform: translateY(-2px);
                    box-shadow: 0 4px 12px rgba(map-get(v.$colors, primary-red), 0.3);
                }

                &:active {
                    transform: translateY(0);
                }
            }

            &.btn-secondary {
                background-color: map-get(v.$colors, light-gray);
                color: map-get(v.$colors, dark-gray);
                border: 2px solid map-get(v.$colors, light-gray);

                &:hover {
                    background-color: darken(map-get(v.$colors, light-gray), 5%);
                    border-color: darken(map-get(v.$colors, light-gray), 10%);
                }
            }

            @include breakpoint(mobile) {
                min-width: unset;
                width: 100%;
                padding: map-get(v.$spacing, sm) map-get(v.$spacing, lg);
            }
        }
    }
}

/* Breadcrumb Enhancement for Edit Profile */
.breadcrumb {
    margin-bottom: map-get(v.$spacing, lg);

    .breadcrumb-link {
        display: inline-flex;
        align-items: center;
        gap: map-get(v.$spacing, xs);
        color: map-get(v.$colors, primary-red);
        text-decoration: none;
        font-weight: map-get(v.$font-weights, medium);
        font-size: map-get(v.$font-sizes, small);
        padding: map-get(v.$spacing, xs) map-get(v.$spacing, sm);
        border-radius: map-get(v.$layout, border-radius);
        transition: all map-get(v.$transitions, normal);

        &:hover {
            background-color: rgba(map-get(v.$colors, primary-red), 0.1);
            color: darken(map-get(v.$colors, primary-red), 10%);
        }

        i {
            font-size: 0.9rem;
        }
    }
}